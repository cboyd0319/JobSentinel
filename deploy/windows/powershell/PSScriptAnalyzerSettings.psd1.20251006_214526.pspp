@{
# PSScriptAnalyzer settings for ZERO-DEFECT PowerShell code
    IncludeDefaultRules = $true
    Severity = @('Error', 'Warning', 'Information')
# Minimal exclusions - only for valid UI scenarios
    ExcludeRules = "@("
        'PSAvoidUsingWriteHost'  # Allow Write-Output for user interaction only)

    Rules = "@{"
# Indentation and formatting
        PSUseConsistentIndentation = "@{"
            Enable = $true
            IndentationSize = "4"
            PipelineIndentation = 'IncreaseIndentationForFirstPipeline'
            Kind = 'space'
        }
        PSUseConsistentWhitespace = "@{"
            Enable = $true
            CheckInnerBrace = $true
            CheckOpenBrace = $true
            CheckOpenParen = $true
            CheckOperator = $true
            CheckPipe = $true
            CheckSeparator = $true
            CheckParameter = $false
            IgnoreAssignmentOperatorInsideHashTable = $false
        }
        PSPlaceOpenBrace = "@{"
            Enable = $true
            OnSameLine = $true
            NewLineAfter = $true
            IgnoreOneLineBlock = $true
        }
        PSPlaceCloseBrace = "@{"
            Enable = $true
            NoEmptyLineBefore = $false
            IgnoreOneLineBlock = $true
            NewLineAfter = $true
        }
# Line length and formatting
        PSAvoidLongLines = "@{"
            Enable = $true
            MaximumLineLength = "120"
        }
        PSAlignAssignmentStatement = "@{"
            Enable = $true
            CheckHashtable = $true
        }
# Comment-based help
        PSProvideCommentHelp = "@{"
            Enable = $true
            ExportedOnly = $false
            BlockComment = $true
            VSCodeSnippetCorrection = $true
            Placement = 'before'
        }
# Security and best practices
        PSAvoidUsingConvertToSecureStringWithPlainText = "@{"
            Enable = $true
        }
        PSAvoidUsingUsernameAndPasswordParams = "@{"
            Enable = $true
        }
        PSAvoidUsingInvokeExpression = "@{"
            Enable = $true
        }
        PSUseCmdletCorrectly = "@{"
            Enable = $true
        }
        PSUseApprovedVerbs = "@{"
            Enable = $true
        }
        PSUseSingularNouns = "@{"
            Enable = $true
        }
# Error handling
        PSAvoidUsingEmptyCatchBlock = "@{"
            Enable = $true
        }
        PSUseShouldProcessForStateChangingFunctions = "@{"
            Enable = $true
        }
        PSUseSupportsShouldProcess = "@{"
            Enable = $true
        }
# Parameter validation
        PSAvoidDefaultValueForMandatoryParameter = "@{"
            Enable = $true
        }
        PSAvoidDefaultValueSwitchParameter = "@{"
            Enable = $true
        }
        PSAvoidNullOrEmptyHelpMessageAttribute = "@{"
            Enable = $true
        }
# Code quality
        PSReviewUnusedParameter = "@{"
            Enable = $true
        }
        PSUseDeclaredVarsMoreThanAssignments = "@{"
            Enable = $true
        }
        PSAvoidAssignmentToAutomaticVariable = "@{"
            Enable = $true
        }
        PSAvoidGlobalVars = "@{"
            Enable = $true
        }
        PSAvoidGlobalFunctions = "@{"
            Enable = $true
        }
        PSAvoidGlobalAliases = "@{"
            Enable = $true
        }
# DSC Rules (when applicable)
        PSDSCStandardDSCFunctionsInResource = "@{"
            Enable = $true
        }
        PSDSCUseIdenticalMandatoryParametersForDSC = "@{"
            Enable = $true
        }
        PSDSCUseIdenticalParametersForDSC = "@{"
            Enable = $true
        }
# Compatibility
        PSUseCompatibleCmdlets = "@{"
            Enable = $true
            compatibility = @('desktop-2.0', 'desktop-5.1', 'core-6.1.0')
        }
        PSUseCompatibleSyntax = "@{"
            Enable = $true
            TargetVersions = @('5.1', '7.0')
        }
        PSUseCompatibleTypes = "@{"
            Enable = $true
            IgnoreTypes = "@()"
        }
    }
}

