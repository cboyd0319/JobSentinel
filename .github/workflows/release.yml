name: Continuous Delivery

on:
  push:
    branches:
      - main

# default: least privileged permissions across all jobs
permissions:
  contents: read

jobs:
  release:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-release-${{ github.ref_name }}
      cancel-in-progress: false

    permissions:
      contents: write

    steps:
      # Note: We checkout the repository at the branch that triggered the workflow
      # with the entire history to ensure to match PSR's release branch detection
      # and history evaluation.
      # However, we forcefully reset the branch to the workflow sha because it is
      # possible that the branch was updated while the workflow was running. This
      # prevents accidentally releasing un-evaluated changes.
      - name: Setup | Checkout Repository on Release Branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0

      - name: Setup | Force release branch to be at workflow sha
        run: |
          git reset --hard ${{ github.sha }}

      - name: Setup | Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.10'

      - name: Setup | Install dependencies
        run: |
          python3 -m pip install --upgrade pip setuptools
          python3 -m pip install -r requirements.txt
          python3 -m pip install build

      - name: Action | Semantic Version Release
        id: release
        # Adjust tag with desired version if applicable.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=$(semantic-release version)
          echo "version=$VERSION" >> $GITHUB_OUTPUT



      - name: Upload | Distribution Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: distribution-artifacts
          path: dist
          if-no-files-found: error

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.release.outputs.version }}
          files: |
            ./dist/job-private-scraper-filter-v${{ steps.release.outputs.version }}.tar.gz
            ./dist/job-private-scraper-filter-v${{ steps.release.outputs.version }}.zip
