name: Path Guard

# Enforces repository file structure per docs/development/workflows/copilot-instructions.md
# Prevents files from being placed in deprecated or incorrect locations

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate-paths:
    name: Validate File Paths
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0  # Need full history for git diff
          persist-credentials: false

      - name: Validate file paths
        id: validate
        shell: bash
        run: |
          set -euo pipefail

          # Get the base branch
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            base="origin/${{ github.base_ref }}"
          else
            base="origin/main"
          fi

          # Fetch base branch for comparison
          ref="${{ github.base_ref || 'main' }}"
          git fetch origin "$ref"

          echo "Checking for files in disallowed locations..."

          # Define disallowed patterns
          # 1. Deprecated root-level code directories (pre-v0.9)
          # 2. Files directly in deploy/common/ root (not in subdirectories)
          # 3. Docs under deploy/common/docs (should be in docs/)
          changed=$(git diff --name-only "$base"... || true)
          disallowed=$(echo "$changed" | \
            grep -E '^(src/|tests/|scripts/|config/|deploy/common/[^/]+\.(py|md|sh|ps1|bat)$|deploy/common/docs/)' || true)
          # Markdown files outside docs/ (allow root README.md)
          md_outside=$(echo "$changed" | grep -E '\.md$' | grep -vE '^(docs/|README\.md$)' || true)
          if [ -n "$md_outside" ]; then
            if [ -n "$disallowed" ]; then
              disallowed="${disallowed}"$'\n'"${md_outside}"
            else
              disallowed="$md_outside"
            fi
          fi

          if [ -n "$disallowed" ]; then
            echo "❌ DISALLOWED FILE LOCATIONS DETECTED:"
            echo "$disallowed"
            echo ""
            echo "Files must be placed according to the Path Router in docs/development/workflows/copilot-instructions.md:"
            echo ""
            echo "Common violations:"
            echo "  • deploy/common/*.py → Should go in deploy/common/app/src/jsa/ or appropriate subdirectory"
            echo "  • src/ → Deprecated; use deploy/common/app/src/jsa/"
            echo "  • tests/ → Deprecated; use deploy/common/tests/"
            echo "  • scripts/ → Deprecated; use deploy/common/scripts/"
            echo "  • config/ → Deprecated; use deploy/common/config/"
            echo "  • deploy/common/docs/ → Should be in docs/"
            echo ""
            echo "See docs/development/workflows/copilot-instructions.md Path Router section for complete mapping."

            # Set output for PR comment
            {
              echo "violations<<EOF"
              echo "$disallowed"
              echo "EOF"
            } >> "$GITHUB_OUTPUT"

            exit 1
          fi

          echo "✅ All file paths are valid!"

      - name: Comment on PR with violations
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          script: |
            const violations = `${{ steps.validate.outputs.violations }}`;
            const body = `## ❌ Path Guard: Invalid File Locations

            The following files are in disallowed locations:

            \`\`\`
            ${violations}
            \`\`\`

            ### Common Fixes:

            - Files in \`deploy/common/*.py\` → Move to \`deploy/common/app/src/jsa/\` or appropriate subdirectory
            - Files in \`src/\` → Deprecated; use \`deploy/common/app/src/jsa/\`
            - Files in \`tests/\` → Deprecated; use \`deploy/common/tests/\`
            - Files in \`scripts/\` → Deprecated; use \`deploy/common/scripts/\`
            - Files in \`config/\` → Deprecated; use \`deploy/common/config/\`
            - Files in \`deploy/common/docs/\` → Should be in \`docs/\`

            See [\`docs/development/workflows/copilot-instructions.md\`](docs/development/workflows/copilot-instructions.md) Path Router section for the complete mapping.`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

      - name: Summary
        if: always()
        run: |
          outcome="${{ steps.validate.outcome }}"
          if [ "$outcome" = "success" ]; then
            echo "✅ All file paths comply with repository structure guidelines" >> "$GITHUB_STEP_SUMMARY"
          else
            echo "❌ Path violations detected. See job output for details." >> "$GITHUB_STEP_SUMMARY"
          fi
