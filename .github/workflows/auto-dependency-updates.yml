name: Automated Dependency Updates & Security Patching

on:
  schedule:
    # Run weekly on Monday at 3 AM UTC (cost optimization)
    - cron: '0 3 * * 1'
  workflow_dispatch:
    inputs:
      update_type:
        description: 'Update type'
        required: true
        default: 'security'
        type: choice
        options:
          - security
          - minor
          - all

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  check-security-updates:
    name: Check for Security Updates
    runs-on: ubuntu-latest
    outputs:
      has_updates: ${{ steps.check.outputs.has_updates }}
      update_count: ${{ steps.check.outputs.update_count }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'  # Latest stable

      - name: Check for security updates
        id: check
        run: |
          pip install --upgrade pip pip-audit

          # Check for known vulnerabilities using pip-audit (uses OSV database)
          pip-audit --format json --output pip-audit-report.json || true

          # Parse results - pip-audit uses 'dependencies' array
          VULN_COUNT=$(jq '[.dependencies[] | select(.vulns | length > 0)] | length' pip-audit-report.json 2>/dev/null || echo 0)

          if [ "$VULN_COUNT" -gt 0 ]; then
            echo "has_updates=true" >> "$GITHUB_OUTPUT"
            echo "update_count=$VULN_COUNT" >> "$GITHUB_OUTPUT"
          else
            echo "has_updates=false" >> "$GITHUB_OUTPUT"
            echo "update_count=0" >> "$GITHUB_OUTPUT"
          fi

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: pip-audit-report.json

  auto-update-python:
    name: Auto-Update Python Dependencies
    runs-on: ubuntu-latest
    needs: check-security-updates
    if: needs.check-security-updates.outputs.has_updates == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'  # Latest stable

      - name: Install pur (pip update requirements)
        run: pip install pur

      - name: Update security patches only
        if: github.event.inputs.update_type == 'security' || github.event_name == 'schedule'
        run: |
          # Get vulnerable packages from pip-audit (uses OSV database)
          pip install pip-audit
          VULN_PACKAGES=$(pip-audit --format json | jq -r '.dependencies[] | select(.vulns | length > 0) | .name' | sort -u)

          # Update only vulnerable packages
          for pkg in $VULN_PACKAGES; do
            pur -r requirements.txt --only "$pkg" --force
          done

      - name: Update minor versions
        if: github.event.inputs.update_type == 'minor'
        run: pur -r requirements.txt --minor

      - name: Update all packages
        if: github.event.inputs.update_type == 'all'
        run: pur -r requirements.txt

      - name: Install updated requirements
        run: |
          pip install -r requirements.txt

      - name: Run tests
        run: |
          # Basic smoke tests
          python -c "from src import agent; print('‚úì agent imports')"
          python -c "from src import database; print('‚úì database imports')"
          python -c "from utils import cache; print('‚úì cache imports')"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "deps(security): auto-update vulnerable dependencies"
          title: "üîí Security: Auto-update vulnerable dependencies"
          body: |
            ## Automated Security Update

            This PR was automatically created to update vulnerable dependencies.

            **Vulnerabilities Found**: ${{ needs.check-security-updates.outputs.update_count }}

            ### Changes
            - Updated vulnerable packages to latest secure versions
            - All smoke tests passed

            ### Security Reports
            See attached artifacts for detailed vulnerability reports.

            ### Next Steps
            1. Review changes in `requirements.txt`
            2. Run full test suite locally
            3. Merge if all checks pass

            **Auto-generated by GitHub Actions**
          branch: auto-deps-security-${{ github.run_number }}
          labels: |
            dependencies
            security
            automated
          assignees: ${{ github.repository_owner }}
          reviewers: ${{ github.repository_owner }}

  check-health:
    name: Post-Update Health Check
    runs-on: ubuntu-latest
    needs: auto-update-python
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'  # Latest stable

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run health check
        run: |
          python -m src.agent --mode health || true

      - name: Create issue if health check fails
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '‚ö†Ô∏è Health Check Failed After Dependency Update',
              body: `Health check failed after automated dependency update.

              **Workflow Run**: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

              Please review the logs and revert changes if necessary.`,
              labels: ['bug', 'automated', 'health-check']
            });
