name: Approve and Merge Dependabot PRs

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry run (only list PRs, do not approve/merge)'
        required: false
        type: boolean
        default: false

permissions:
  contents: write
  pull-requests: write

jobs:
  approve-and-merge:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: List and process Dependabot PRs
        env:
          GH_TOKEN: ${{ github.token }}
          DRY_RUN: ${{ inputs.dry_run }}
        run: |
          set -e
          
          echo "🔍 Fetching open Dependabot PRs..."
          
          # Get all open PRs authored by Dependabot
          prs=$(gh pr list --author "app/dependabot" --state open --json number,title,url,mergeable,statusCheckRollup)
          pr_count=$(echo "$prs" | jq '. | length')
          
          echo "Found $pr_count Dependabot PRs"
          
          if [ "$pr_count" -eq 0 ]; then
            echo "No Dependabot PRs to process"
            exit 0
          fi
          
          # Initialize counters
          approved_count=0
          merged_count=0
          failed_count=0
          
          # Process each PR
          echo "$prs" | jq -c '.[]' | while read -r pr; do
            pr_number=$(echo "$pr" | jq -r '.number')
            pr_title=$(echo "$pr" | jq -r '.title')
            pr_url=$(echo "$pr" | jq -r '.url')
            
            echo ""
            echo "📦 Processing PR #$pr_number: $pr_title"
            echo "   URL: $pr_url"
            
            if [ "$DRY_RUN" = "true" ]; then
              echo "   [DRY RUN] Would approve and merge this PR"
              continue
            fi
            
            # Check CI status
            status_checks=$(echo "$pr" | jq -r '.statusCheckRollup // [] | length')
            failed_checks=$(echo "$pr" | jq -r '[.statusCheckRollup[] | select(.conclusion == "FAILURE")] | length')
            pending_checks=$(echo "$pr" | jq -r '[.statusCheckRollup[] | select(.status == "IN_PROGRESS" or .status == "QUEUED" or .status == "PENDING")] | length')
            
            if [ "$failed_checks" -gt 0 ]; then
              echo "   ⚠️  PR has $failed_checks failing checks, skipping"
              failed_count=$((failed_count + 1))
              continue
            fi
            
            if [ "$pending_checks" -gt 0 ]; then
              echo "   ⏳ PR has $pending_checks pending checks"
            else
              echo "   ✅ All checks passed"
            fi
            
            # Approve the PR using gh CLI
            echo "   Approving PR..."
            if gh pr review "$pr_number" --approve --body "🤖 Auto-approved by workflow" 2>&1; then
              echo "   ✅ Approved PR #$pr_number"
              approved_count=$((approved_count + 1))
            else
              echo "   ℹ️  PR #$pr_number may already be approved or approval failed"
              approved_count=$((approved_count + 1))
            fi
            
            # Enable auto-merge or merge directly
            if [ "$pending_checks" -eq 0 ] && [ "$status_checks" -gt 0 ]; then
              echo "   Attempting to merge PR..."
              if gh pr merge "$pr_number" --auto --squash 2>&1; then
                echo "   ✅ Enabled auto-merge for PR #$pr_number"
                merged_count=$((merged_count + 1))
              elif gh pr merge "$pr_number" --squash 2>&1; then
                echo "   ✅ Merged PR #$pr_number"
                merged_count=$((merged_count + 1))
              else
                echo "   ⚠️  Could not merge PR #$pr_number"
                failed_count=$((failed_count + 1))
              fi
            else
              echo "   ⏳ Enabling auto-merge for when checks complete..."
              if gh pr merge "$pr_number" --auto --squash 2>&1; then
                echo "   ✅ Enabled auto-merge for PR #$pr_number"
                merged_count=$((merged_count + 1))
              else
                echo "   ⚠️  Could not enable auto-merge for PR #$pr_number"
                failed_count=$((failed_count + 1))
              fi
            fi
            
            # Add a comment
            gh pr comment "$pr_number" --body "🤖 This Dependabot PR has been auto-approved and will merge when CI passes." || true
          done
          
          echo ""
          echo "============================================================"
          echo "📊 Summary:"
          echo "   Total PRs processed: $pr_count"
          echo "   ✅ Approved: $approved_count"
          echo "   🔀 Merged/Auto-merge enabled: $merged_count"
          echo "   ❌ Skipped/Failed: $failed_count"
          echo "============================================================"

      - name: Summary
        run: |
          echo "### Dependabot PR Processing Complete 🎉" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Check the logs above for details on each PR processed." >> $GITHUB_STEP_SUMMARY
