name: Security Scanning

# Bandit and pip-audit for comprehensive security scanning
# - Bandit: Python code security analysis with SARIF output for GitHub Security tab
# - pip-audit: Dependency vulnerability scanning
#
# NOTE: This is the AUTHORITATIVE security scan with SARIF output
# Do not add duplicate security scanning to other workflows

"on":
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch: {}

permissions:
  contents: read
  security-events: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  security:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: '3.11'

      - name: Install Security Tools
        run: |
          python -m pip install --upgrade pip
          pip install bandit[toml] bandit-sarif-formatter pip-audit

      - name: Run Bandit Security Analysis
        run: |
          bandit -r deploy/common/app/src/ deploy/common/scripts/ \
            -f sarif -o bandit-report.sarif \
            --exit-zero
        continue-on-error: true

      - name: Upload Bandit Results to GitHub Security
        uses: github/codeql-action/upload-sarif@f443b600d91635bebf5b0d9ebc620189c0d6fba5 # v4.30.8
        with:
          sarif_file: bandit-report.sarif
          category: bandit
        if: always()

      - name: Run pip-audit Dependency Scan
        run: |
          # Audit installed packages for known vulnerabilities
          pip-audit --desc --format json -o pip-audit-report.json || true
          echo "Dependency audit complete (results in pip-audit-report.json)"
        continue-on-error: true

      - name: Display pip-audit Results
        run: |
          if [ -f pip-audit-report.json ]; then
            echo "=== Dependency Vulnerabilities ==="
            pip-audit --desc || echo "No critical vulnerabilities found or audit failed"
          fi
        if: always()
