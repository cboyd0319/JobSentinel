name: MegaLinter

# This workflow provides comprehensive multi-language linting beyond Python-specific tools.
# It's complementary to CI workflow's ruff/mypy checks and security.yml's PyGuard scanning
# Focuses on non-Python files: Bash, YAML, JSON, Markdown, GitHub Actions, Dockerfiles

on:
  pull_request:
  push:
    branches: [main]
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: read

jobs:
  mega-linter:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # ðŸ’° Comprehensive linting may take time
    # Continue on error to avoid blocking PRs - this is an advisory check
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install project (runtime + dev) for typed core
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install -e .[dev]

      - name: MegaLinter
        uses: oxsecurity/megalinter@v8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: true
          # Use default configuration as .mega-linter.yml doesn't exist
          DEFAULT_WORKSPACE: ${{ github.workspace }}

      - name: Upload MegaLinter reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mega-linter-reports
          path: megalinter-reports

