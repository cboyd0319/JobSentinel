name: "Prepare Python Environment"
description: "Set up Python, optional dependencies, and local config scaffolding"
author: "cboyd0319"
inputs:
  python-version:
    description: "Python version to install"
    default: "3.12.10"
  cache-dependency-path:
    description: "Paths for pip cache key"
    default: "requirements.txt"
  install-deps:
    description: "Install project requirements"
    default: "false"
  requirements-file:
    description: "Requirements file to install when install-deps=true"
    default: "requirements.txt"
  prepare-config:
    description: "Copy .env example and user prefs for runtime commands"
    default: "false"

runs:
  using: "composite"
  steps:
    - name: Set up Python
      uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d
      with:
        python-version: ${{ inputs.python-version }}
        cache: pip
        cache-dependency-path: ${{ inputs.cache-dependency-path }}

    - name: Install requirements
      if: inputs.install-deps == 'true'
      shell: bash
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r "${{ inputs.requirements-file }}"

    - name: Prepare runtime config
      if: inputs.prepare-config == 'true'
      shell: bash
      run: |
        cp .env.example .env
        mkdir -p config data
        cp config/user_prefs.example.json config/user_prefs.json
        chmod 600 .env || true
